{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/bio.js","webpack:///./src/components/newslettersignup.js","webpack:///./src/components/layout.js","webpack:///./src/components/getImageUrl.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","a","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","createElement","Fragment","props","children","Consumer","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Nav","_useState","useState","isExpanded","toggleExpansion","react_default","gatsby_browser_entry","to","className","style","display","flex","onClick","site","siteMetadata","menuLinks","map","link","key","name","listStyleType","activeClassName","_793409878","Bio","_1509195349","author","marginBottom","width","alignItems","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","height","borderRadius","imgStyle","Newsletter","action","method","target","onsubmit","for","type","id","placeholder","value","Layout","_this$props","this","location","title","marginLeft","maxWidth","padding","nav","bio","Date","getFullYear","newslettersignup","Component","getImageUrl","urlToFind","window","image","_1261650751","images","edges","find","fn","replace","node","relativePath","includes","host","fluid","src","SEO","metaImage","description","lang","meta","_724162543","metaDescription","Helmet_default","htmlAttributes","titleTemplate","content","property","concat","defaultProps","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"1-1ea8fc175d539e0223e4.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React, { useState } from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\n\nfunction Nav() {\n  \n  const [isExpanded, toggleExpansion] = useState(false);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n              menuLinks {\n                name\n                link\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        \n        <React.Fragment>\n          <nav>\n            <Link to=\"/\">\n              <div className=\"logo\">\n                KrisKodira\n              </div>\n            </Link>\n            <ul style={{ display: \"flex\", flex: 1 }}>\n              <li className={`${ isExpanded ? `block` : `hidden` } mobileNav`} onClick={() => toggleExpansion(!isExpanded)}>Menu</li>\n              {data.site.siteMetadata.menuLinks.map(link => (\n                <li\n                  key={link.name}\n                  style={{\n                    listStyleType: `none`,\n                  }}\n                >\n                  <Link to={link.link} activeClassName=\"active\">\n                    {link.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </React.Fragment>\n      )}\n    />\n  )\n}\n\nexport default Nav\n\n\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        marginBottom: rhythm(2.5),\n        width: 300,\n        alignItems: \"center\"\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 100,\n          height: 100,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p\n        style={{\n          marginBottom: 0\n        }}\n      >\n        Written by <strong>{author}</strong> who lives and works in Frankfurt am Main.\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Newsletter = () => {\n  \n  return (\n    <form action=\"https://tinyletter.com/kriskodira\" method=\"post\" target=\"popupwindow\" onsubmit=\"window.open('https://tinyletter.com/kriskodira', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true\">\n      <p><label for=\"tlemail\">Get new posts in your inbox</label></p>\n      <p><input type=\"text\" name=\"email\" id=\"tlemail\" placeholder=\"E-Mail\" /></p>\n      <input type=\"hidden\" value=\"1\" name=\"embed\"/>\n      <input className=\"submitBtn\" type=\"submit\" value=\"Subscribe\" />\n    </form>\n  )\n}\n\nexport default Newsletter\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport Nav from \"./nav\"\nimport Bio from \"./bio\"\nimport Newsletter from \"./newslettersignup\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(48),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header><Nav /></header>\n        <main>{children}</main>\n        <footer>\n          <div>\n            <Bio />\n            <p><Link to=\"/privacy-policy\">Datenschutzerklärung</Link> | <Link to=\"/imprint\">Impressum</Link></p>\n            <p>\n              © {new Date().getFullYear()}, made by KrisKodira\n            </p>\n          </div>\n\n          <Newsletter />\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const getImageUrl = function(urlToFind) {\n  if(typeof window !== \"undefined\"){\n    const imageData = useStaticQuery(\n      graphql`\n        query Images {\n          images: allFile {\n            edges {\n              node {\n                relativePath\n                name\n                childImageSharp {\n                  fluid(maxWidth: 600) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      `\n    )\n  \n    const image = imageData.images.edges.find(n => {\n      let fn = urlToFind.replace(/\\//gi, \"\");\n      return (n.node.relativePath.includes(fn));\n    });\n    if (!image) {\n      return (null);\n    }\n  \n    return (\"http://\" + window.location.host + image.node.childImageSharp.fluid.src);\n  }\n}\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes, { func } from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { getImageUrl } from \"./getImageUrl.js\"\n\nfunction SEO({description, lang, meta, title, image }) {\n  let metaImage;\n\n  const { site } = useStaticQuery(\n    graphql`\n      query Site {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  if(image !== \"\" && typeof image !== \"undefined\"){\n    metaImage = getImageUrl(image);\n  }\n  else{\n    metaImage = ``;\n  }\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `image`,\n          content: metaImage,\n        },\n        {\n          name: `og:image`,\n          content: metaImage,\n        },\n        {\n          name: `twitter:image`,\n          content: metaImage,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n  image: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string\n}\n\nexport default SEO","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}